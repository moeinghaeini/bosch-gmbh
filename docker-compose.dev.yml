version: '3.8'

services:
  # SQL Server Database
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: industrial-automation-sqlserver-dev
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong@Passw0rd
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
      - ./backend/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - industrial-automation-network
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P 'YourStrong@Passw0rd' -Q 'SELECT 1' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: industrial-automation-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - industrial-automation-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API (Development with hot reload)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: industrial-automation-backend-dev
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=IndustrialAutomationDb;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=true;
      - Redis__ConnectionString=redis:6379
      - Jwt__Secret=YourSuperSecretKeyThatIsAtLeast32CharactersLong!
      - Jwt__Issuer=IndustrialAutomation
      - Jwt__Audience=IndustrialAutomation
      - OpenAI__ApiKey=your-openai-api-key-here
      - OpenAI__Model=gpt-3.5-turbo
    ports:
      - "5001:80"
    depends_on:
      sqlserver:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/src
      - ./backend/logs:/app/logs
    networks:
      - industrial-automation-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Frontend React App (Development with hot reload)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: industrial-automation-frontend-dev
    ports:
      - "3000:80"
    depends_on:
      - backend
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    networks:
      - industrial-automation-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  sqlserver_data:
    driver: local
  redis_data:
    driver: local

networks:
  industrial-automation-network:
    driver: bridge
